#!/usr/bin/env python
import os
import sys
import django

# Configurar Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'fibermeyer_project.settings')
django.setup()

from main.models import MP_Produtos, ProdutoComponente
import json

def analisar_componentes_detalhado():
    """An√°lise detalhada dos componentes para identificar o problema do rec√°lculo"""
    try:
        produto = MP_Produtos.objects.get(id=1392)
        print(f"=== AN√ÅLISE DETALHADA DOS COMPONENTES ===")
        print(f"Produto: {produto.descricao}")
        print(f"Custo atual: R$ {produto.custo_centavos/100:.2f}")
        
        componentes = ProdutoComponente.objects.filter(produto_principal=produto)
        print(f"\n=== COMPONENTES ({componentes.count()}) ===")
        
        custo_total_calculado = 0
        custo_total_observacao = 0
        
        for i, comp in enumerate(componentes, 1):
            print(f"\n{i}. ID {comp.id}: {comp.produto_componente.descricao}")
            print(f"   Quantidade: {comp.quantidade}")
            print(f"   Custo base unit√°rio: R$ {comp.produto_componente.custo_centavos/100:.2f}")
            
            # C√°lculo padr√£o (quantidade √ó custo base)
            custo_padrao_total = comp.produto_componente.custo_centavos * float(comp.quantidade)
            custo_total_calculado += custo_padrao_total
            print(f"   Custo padr√£o total: R$ {custo_padrao_total/100:.2f}")
            
            # Analisar observa√ß√£o
            if comp.observacao:
                print(f"   Observa√ß√£o completa: {comp.observacao}")
                try:
                    obs_data = json.loads(comp.observacao)
                    print(f"   Dados da observa√ß√£o:")
                    for key, value in obs_data.items():
                        if key == 'custo_total':
                            print(f"     ‚Ä¢ {key}: R$ {value/100:.2f}")
                            custo_total_observacao += value
                        elif key == 'custo_unitario':
                            print(f"     ‚Ä¢ {key}: R$ {value/100:.2f}")
                        else:
                            print(f"     ‚Ä¢ {key}: {value}")
                except json.JSONDecodeError as e:
                    print(f"   ‚ùå Erro ao decodificar JSON: {e}")
                    custo_total_observacao += custo_padrao_total
            else:
                print(f"   Sem observa√ß√£o")
                custo_total_observacao += custo_padrao_total
        
        print(f"\n=== RESUMO DE CUSTOS ===")
        print(f"Custo atual no produto: R$ {produto.custo_centavos/100:.2f}")
        print(f"Soma custos padr√£o: R$ {custo_total_calculado/100:.2f}")
        print(f"Soma custos observa√ß√£o: R$ {custo_total_observacao/100:.2f}")
        
        # Se h√° diferen√ßa significativa
        if abs(50010 - custo_total_observacao) < abs(50010 - custo_total_calculado):
            print(f"\n‚úÖ O valor correto (R$ 500,10) est√° mais pr√≥ximo dos custos nas observa√ß√µes")
            print(f"üí° O problema pode estar na l√≥gica do rec√°lculo que n√£o est√° usando as observa√ß√µes corretamente")
        else:
            print(f"\n‚ö†Ô∏è Nenhum dos c√°lculos chega pr√≥ximo ao valor correto de R$ 500,10")
            print(f"üîç Pode haver um problema na forma como os custos foram salvos")
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")

if __name__ == "__main__":
    analisar_componentes_detalhado()
