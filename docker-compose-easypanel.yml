version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fibermeyer
      POSTGRES_USER: fibermeyer
      POSTGRES_PASSWORD: fibermeyer123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fibermeyer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fibermeyer -d fibermeyer"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    image: python:3.11-slim
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://fibermeyer:fibermeyer123@db:5432/fibermeyer
      DJANGO_DEBUG: "False"
      DJANGO_SECRET_KEY: fibermeyer-production-secret-2025-change-in-production
      DJANGO_ALLOWED_HOSTS: "*"
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"
    working_dir: /app
    ports:
      - "8000:8000"
    volumes:
      - app_media:/app/media
      - app_static:/app/staticfiles
    networks:
      - fibermeyer-network
    command: >
      sh -c "
        echo '🔧 Atualizando sistema e instalando dependências...' &&
        apt-get update -qq &&
        apt-get install -y -qq --no-install-recommends git netcat-traditional pkg-config default-libmysqlclient-dev build-essential &&
        apt-get clean && rm -rf /var/lib/apt/lists/* &&
        
        echo '📥 Clonando repositório FIBERMEYER...' &&
        if [ ! -d .git ]; then
          git clone https://github.com/Fernando-Godinho/FIBERMEYER.git . &&
          echo '✅ Repositório clonado!';
        else
          git fetch origin &&
          git reset --hard origin/main &&
          echo '✅ Repositório atualizado!';
        fi &&
        
        echo '📦 Instalando dependências Python...' &&
        pip install --no-cache-dir --upgrade pip &&
        pip install --no-cache-dir -r requirements.txt &&
        
        echo '⏳ Aguardando PostgreSQL ficar disponível...' &&
        timeout=60 &&
        while ! nc -z db 5432 && [ $$timeout -gt 0 ]; do
          echo 'Aguardando banco... ($$timeout segundos restantes)';
          sleep 2;
          timeout=$$((timeout-2));
        done &&
        
        if ! nc -z db 5432; then
          echo '❌ Timeout na conexão com o banco!';
          exit 1;
        fi &&
        
        echo '✅ PostgreSQL conectado!' &&
        
        echo '🔄 Executando migrações do banco...' &&
        python manage.py makemigrations --noinput &&
        python manage.py migrate --noinput &&
        
        echo '📊 Coletando arquivos estáticos...' &&
        python manage.py collectstatic --noinput --clear &&
        
        echo '👤 Configurando superusuário...' &&
        python manage.py shell -c \"
        from django.contrib.auth import get_user_model;
        User = get_user_model();
        if not User.objects.filter(username='admin').exists():
            User.objects.create_superuser('admin', 'admin@fibermeyer.com', 'admin123');
            print('✅ Superusuário criado: admin/admin123');
        else:
            print('ℹ️ Superusuário admin já existe');
        \" &&
        
        echo '🚀 Iniciando servidor FIBERMEYER...' &&
        echo '🌐 Sistema será acessível via proxy do EasyPanel' &&
        echo '👨‍💼 Admin: /admin/ (admin/admin123)' &&
        python manage.py runserver 0.0.0.0:8000
      "
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/admin/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  fibermeyer-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  app_media:
    driver: local
  app_static:
    driver: local