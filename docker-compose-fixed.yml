services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fibermeyer
      POSTGRES_USER: fibermeyer
      POSTGRES_PASSWORD: fibermeyer123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fibermeyer -d fibermeyer"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: python:3.11-slim
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://fibermeyer:fibermeyer123@db:5432/fibermeyer
      DJANGO_DEBUG: "False"
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_STATIC_ROOT: "/app/staticfiles"
      PYTHONUNBUFFERED: "1"
    working_dir: /app
    ports:
      - "8000:8000"
    volumes:
      - app_media:/app/media
      - app_static:/app/staticfiles
    command: bash -c "echo '🚀 Iniciando FIBERMEYER...' && apt-get update -qq && apt-get install -y -qq git netcat-traditional build-essential pkg-config default-libmysqlclient-dev && echo '📥 Baixando código...' && rm -rf /tmp/fibermeyer /app/.git* 2>/dev/null || true && git clone https://github.com/Fernando-Godinho/FIBERMEYER.git /tmp/fibermeyer && cp -r /tmp/fibermeyer/* /app/ && cd /app && echo '📦 Instalando dependências...' && pip install -q Django==5.2.4 djangorestframework reportlab psycopg2-binary requests pillow python-decouple asgiref sqlparse tzdata && echo '⏳ Aguardando PostgreSQL...' && while ! nc -z db 5432; do sleep 2; done && echo '🗄️ Configurando banco...' && python manage.py migrate --noinput && echo '📁 Configurando arquivos estáticos...' && mkdir -p /app/staticfiles && python manage.py collectstatic --noinput --clear && echo '👤 Criando admin...' && python -c 'from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username=\"admin\").exists() or User.objects.create_superuser(\"admin\", \"admin@fibermeyer.com\", \"admin123\")' && echo '✅ Sistema pronto! Admin: admin/admin123' && python manage.py runserver 0.0.0.0:8000"
    restart: on-failure:5

volumes:
  postgres_data:
  app_media:
  app_static: