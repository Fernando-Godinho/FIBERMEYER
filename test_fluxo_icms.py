#!/usr/bin/env python
"""
Teste completo do fluxo ICMS: Criar or√ßamento > Verificar exibi√ß√£o > Editar > Verificar novamente
"""
import os
import sys
import django
from datetime import date, timedelta

# Configurar o Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'fibermeyer_project.settings')
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
django.setup()

from main.models import Orcamento

def testar_fluxo_completo():
    """Testar todo o fluxo de ICMS no or√ßamento"""
    try:
        print("=== TESTE COMPLETO DO FLUXO ICMS ===\n")
        
        # 1. Criar or√ßamento com ICMS espec√≠fico
        print("1Ô∏è‚É£ CRIANDO OR√áAMENTO COM ICMS PERSONALIZADO...")
        
        # Deletar teste anterior se existir
        Orcamento.objects.filter(numero_orcamento='TESTE-FLUXO-ICMS').delete()
        
        orcamento = Orcamento.objects.create(
            numero_orcamento='TESTE-FLUXO-ICMS',
            revisao=1,
            cliente='EMPRESA TESTE LTDA',
            uf='RJ',
            contato='Maria Silva',
            telefone='(21) 98888-7777',
            email='teste@empresa.com.br',
            frete='CIF',
            instalacao='INCLUSA',
            venda_destinada='USO_CONSUMO',
            cliente_contrib_icms='NAO_CONTRIBUINTE',
            cnpj_faturamento='11.222.333/0001-44',
            tipo_resina='ISOFTALICA',
            tipo_inox='AISI_316',
            comissao=8.5,
            icms=21.17,  # ICMS para n√£o contribuinte RJ
            validade=date.today() + timedelta(days=45),
            observacoes='Teste completo do fluxo ICMS - N√£o contribuinte do RJ'
        )
        
        print(f"   ‚úÖ Or√ßamento criado: ID {orcamento.id}")
        print(f"   üìã N√∫mero: {orcamento.numero_orcamento}")
        print(f"   üè¢ Cliente: {orcamento.cliente}")
        print(f"   üìç UF: {orcamento.uf}")
        print(f"   üí∞ ICMS: {orcamento.icms}%")
        print(f"   üíº Comiss√£o: {orcamento.comissao}%")
        print(f"   üè≠ Venda: {orcamento.venda_destinada}")
        print(f"   üë§ Contribuinte: {orcamento.cliente_contrib_icms}")
        
        # 2. Verificar se os dados est√£o corretos
        print(f"\n2Ô∏è‚É£ VERIFICANDO DADOS SALVOS...")
        orcamento_db = Orcamento.objects.get(id=orcamento.id)
        
        assert float(orcamento_db.icms) == 21.17, f"ICMS incorreto: esperado 21.17, encontrado {orcamento_db.icms}"
        assert float(orcamento_db.comissao) == 8.5, f"Comiss√£o incorreta: esperado 8.5, encontrado {orcamento_db.comissao}"
        assert orcamento_db.uf == 'RJ', f"UF incorreta: esperado RJ, encontrado {orcamento_db.uf}"
        assert orcamento_db.venda_destinada == 'USO_CONSUMO', f"Venda incorreta"
        assert orcamento_db.cliente_contrib_icms == 'NAO_CONTRIBUINTE', f"Contribuinte incorreto"
        
        print(f"   ‚úÖ Todos os campos salvos corretamente!")
        
        # 3. Simular edi√ß√£o - alterar ICMS e comiss√£o
        print(f"\n3Ô∏è‚É£ SIMULANDO EDI√á√ÉO DO OR√áAMENTO...")
        orcamento_db.icms = 18.0  # Alterar ICMS
        orcamento_db.comissao = 10.0  # Alterar comiss√£o
        orcamento_db.uf = 'SP'  # Alterar UF
        orcamento_db.save()
        
        print(f"   ‚úÖ Or√ßamento editado!")
        print(f"   üí∞ Novo ICMS: {orcamento_db.icms}%")
        print(f"   üíº Nova Comiss√£o: {orcamento_db.comissao}%")
        print(f"   üìç Nova UF: {orcamento_db.uf}")
        
        # 4. Verificar se as altera√ß√µes foram salvas
        print(f"\n4Ô∏è‚É£ VERIFICANDO ALTERA√á√ïES...")
        orcamento_final = Orcamento.objects.get(id=orcamento.id)
        
        assert float(orcamento_final.icms) == 18.0, f"ICMS n√£o foi atualizado"
        assert float(orcamento_final.comissao) == 10.0, f"Comiss√£o n√£o foi atualizada"
        assert orcamento_final.uf == 'SP', f"UF n√£o foi atualizada"
        
        print(f"   ‚úÖ Todas as altera√ß√µes salvas corretamente!")
        
        # 5. Exibir URLs para teste manual
        print(f"\n5Ô∏è‚É£ URLS PARA TESTE MANUAL:")
        print(f"   üîó Ver Or√ßamento: http://127.0.0.1:8000/orcamento/{orcamento.id}/")
        print(f"   ‚úèÔ∏è  Editar Or√ßamento: http://127.0.0.1:8000/orcamento/{orcamento.id}/edit/")
        
        # 6. Verificar template de exibi√ß√£o
        print(f"\n6Ô∏è‚É£ CAMPOS QUE DEVEM APARECER NA TELA:")
        print(f"   üìã N√∫mero: {orcamento_final.numero_orcamento}")
        print(f"   üè¢ Cliente: {orcamento_final.cliente}")
        print(f"   üìû Contato: {orcamento_final.contato}")
        print(f"   üì± Telefone: {orcamento_final.telefone}")
        print(f"   üìß Email: {orcamento_final.email}")
        print(f"   üìç UF: {orcamento_final.uf}")
        print(f"   üí∞ ICMS: {orcamento_final.icms}% (badge azul)")
        print(f"   üíº Comiss√£o: {orcamento_final.comissao}% (badge cinza)")
        print(f"   üìä Status: {orcamento_final.status} (badge amarelo)")
        
        print(f"\n‚úÖ TESTE COMPLETO FINALIZADO COM SUCESSO!")
        print(f"üéØ O ICMS e Comiss√£o devem aparecer nos detalhes do or√ßamento!")
        
        return orcamento.id
        
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        import traceback
        traceback.print_exc()
        return None

if __name__ == "__main__":
    orcamento_id = testar_fluxo_completo()
    
    if orcamento_id:
        print(f"\nüöÄ Abra o navegador e acesse:")
        print(f"   http://127.0.0.1:8000/orcamento/{orcamento_id}/")
        print(f"\nüîç Verifique se o ICMS e Comiss√£o aparecem nos detalhes!")
        print(f"‚úèÔ∏è  Teste tamb√©m o bot√£o 'Editar Or√ßamento' para ver se funciona!")