#!/usr/bin/env python
"""
Teste para validar o novo template Tampa Injetada
"""
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'fibermeyer_project.settings')
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
django.setup()

from main.models import MP_Produtos

def teste_template_tampa_injetada():
    print("=== TESTE: NOVO TEMPLATE TAMPA INJETADA ===\n")
    
    print("üöÄ NOVO TEMPLATE CRIADO:")
    print("   ‚Ä¢ Nome: Tampa Injetada")
    print("   ‚Ä¢ Baseado no template Grades")
    print("   ‚Ä¢ Usa grades injetadas em vez de perfis")
    
    print(f"\nüìã GRADES INJETADAS DISPON√çVEIS:")
    try:
        grades = MP_Produtos.objects.filter(descricao__icontains='grade').filter(descricao__icontains='injetada')
        if grades.count() > 0:
            for grade in grades:
                print(f"   ‚Ä¢ ID: {grade.id} | {grade.descricao} | R$ {grade.custo_centavos/100:.2f}/m¬≤")
        else:
            print("   ‚ùå Nenhuma grade injetada encontrada no banco")
        
        print(f"\n‚úÖ CAMPOS DO FORMUL√ÅRIO:")
        print(f"   ‚Ä¢ Nome da Tampa Injetada *")
        print(f"   ‚Ä¢ V√£o (mm) *") 
        print(f"   ‚Ä¢ Comprimento (mm) *")
        print(f"   ‚Ä¢ Selecione a Grade Injetada * (dropdown)")
        print(f"   ‚Ä¢ Perda (%) - padr√£o: 5%")
        print(f"   ‚Ä¢ Tempo PROC (h) - padr√£o: 0.3h")
        print(f"   ‚Ä¢ Tempo MTG (h) - padr√£o: 0.3h")
        
        print(f"\nüßÆ F√ìRMULA DE C√ÅLCULO:")
        print(f"   1. √Årea = (v√£o/1000) √ó (comprimento/1000) m¬≤")
        print(f"   2. Custo Grade = √°rea √ó pre√ßo_grade/m¬≤ √ó (1 + perda%)")
        print(f"   3. Custo MO = (tempo_proc + tempo_mtg) √ó R$ 65,79/h")
        print(f"   4. Total = Custo Grade + Custo MO")
        
        print(f"\nüìä EXEMPLO PR√ÅTICO (Tampa 2000mm √ó 1500mm):")
        area_exemplo = (2000/1000) * (1500/1000)  # 3 m¬≤
        
        # Usar a primeira grade para exemplo
        if grades.count() > 0:
            grade_exemplo = grades.first()
            custo_grade = area_exemplo * (grade_exemplo.custo_centavos/100) * 1.05  # com 5% perda
            custo_mo = (0.3 + 0.3) * 65.79  # 0.6h total
            total = custo_grade + custo_mo
            
            print(f"   ‚Ä¢ √Årea: {area_exemplo} m¬≤")
            print(f"   ‚Ä¢ Grade: {grade_exemplo.descricao}")
            print(f"   ‚Ä¢ Custo Grade: {area_exemplo}m¬≤ √ó R$ {grade_exemplo.custo_centavos/100:.2f} √ó 1.05 = R$ {custo_grade:.2f}")
            print(f"   ‚Ä¢ Custo MO: 0.6h √ó R$ 65,79 = R$ {custo_mo:.2f}")
            print(f"   ‚Ä¢ TOTAL: R$ {total:.2f}")
            
        print(f"\n‚úÖ COMPONENTES NA TABELA:")
        print(f"   1. Grade Injetada selecionada (com perda)")
        print(f"   2. M√£o de Obra Processamento/Montagem (sem perda)")
        
        print(f"\nüéØ DIFEREN√áAS DO TEMPLATE GRADES:")
        print(f"   ‚Ä¢ Grades usa perfis I25/I32/I38 + chaveta + cola")
        print(f"   ‚Ä¢ Tampa Injetada usa grade injetada pronta por m¬≤")
        print(f"   ‚Ä¢ C√°lculo mais simples: √°rea √ó pre√ßo/m¬≤")
        print(f"   ‚Ä¢ Sem necessidade de eixo I ou chavetas")
        
        print(f"\nüöÄ TESTE NA INTERFACE:")
        print(f"   1. Selecionar 'Tampa Injetada' no dropdown")
        print(f"   2. Preencher: nome, v√£o, comprimento")
        print(f"   3. Escolher uma das grades injetadas")
        print(f"   4. Ajustar perda e tempos se necess√°rio")
        print(f"   5. Clicar 'Calcular Tampa Injetada'")
        
    except Exception as e:
        print(f"‚ùå Erro: {e}")

if __name__ == '__main__':
    teste_template_tampa_injetada()
